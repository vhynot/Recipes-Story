{"version":3,"sources":["components/global/global.style.js","components/global/theme.style.js","components/header/header.style.js","components/header/Header.js","components/layout/layout.style.js","components/layout/Layout.js","components/recipe/recipe.style.js","reducers/recipesReducer.js","context/recipesContext.js","components/recipe/Recipe.js","components/buttons/button.style.js","components/buttons/Button.js","components/forms/form.style.js","context/formContext.js","components/forms/AddForm.js","routes/Home.js","components/forms/EditForm.js","components/buttons/back-arrow.style.js","components/recipe/recipe-wrapper.style.js","components/buttons/edit-button.style.js","routes/RecipeDetails.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","noScroll","theme","color","white","orange","lightOrange","purple","lightPurple","pink","lightRed","black","darkFont","HeaderWrapper","styled","div","Title","p","bold","Header","LayoutWrapper","Layout","children","RecipeWrapper","Text","ButtonWrapper","DeleteButton","svg","recipesReducer","state","action","type","title","recipe","ingredients","id","uuidv4","editedRecipe","updatedRecipes","map","filter","RecipesContext","createContext","RecipesContextProvider","useReducer","recipes","dispatch","Provider","value","LinkTo","Link","Recipe","useContext","to","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","onClick","points","d","Add","props","active","activeAdd","Button","className","activeButton","activeClose","x1","y1","x2","y2","Overlay","visible","FormWrapper","form","InputTitle","input","InputIngredients","textarea","InputButton","button","FormContext","FormContextProvider","useState","addFormVisible","setAddFormVisible","editFormVisible","setEditFormVisible","handleAddFormVisible","prev","handleEditFormVisible","AddForm","setTitle","setIngredients","inputRef","useRef","useEffect","current","focus","onSubmit","e","preventDefault","trim","ref","onChange","target","placeholder","name","Home","recipesList","key","currentRecipe","editTitle","setEditTitle","editIngredients","setEditIngredients","BackArrow","RecipeTitle","List","ol","Ingredient","li","EditButton","CloseButton","RecipeDetails","setCurrentRecipe","currentID","useParams","filteredRecipe","Object","keys","length","ingredientsArr","split","spread","ingredient","idx","EditForm","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51504d94.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n    * {\n        box-sizing: border-box;\n        margin: 0;\n        padding: 0;\n    }\n    html {\n        overflow: ${({ noScroll }) => (noScroll ? \"hidden\" : \"unset\")};\n        font-size: 62.5%;\n        /* margin-right: ${({ noScroll }) => (noScroll ? \"10px\" : \"unset\")}; */\n        font-family: 'Inter', sans-serif;\n        color: ${({ theme: { color } }) => color.white};\n        background-image: linear-gradient(120deg, #fac348, #fab41a);\n        min-height: 100vh;\n    }\n    p,li, input {\n        font-size: 1.6rem;\n    }\n`;\n","export const theme = {\n  color: {\n    orange: \"#fab41a\",\n    lightOrange: \"#fac348\",\n    purple: \"#4b1338\",\n    lightPurple: \"#764b65\",\n    pink: \"#f73565\",\n    lightRed: \"#f76040\",\n    white: \"#fff\",\n    black: \"#000\",\n    darkFont: \"#444242\",\n  },\n};\n","import styled from \"styled-components\";\n\nexport const HeaderWrapper = styled.div`\n    text-align: center;\n    margin: 2rem;\n`;\n\nexport const Title = styled.p`\n    color: ${({ theme: { color } }) => color.darkFont};\n    font-size: 3.2rem;\n    font-weight: ${({ bold }) => (bold ? \"500\" : \"300\")};\n`;\n","import React from \"react\";\nimport { HeaderWrapper, Title } from \"./header.style\";\n\nconst Header = () => {\n  return (\n    <HeaderWrapper>\n      <Title>Save your</Title>\n      <Title bold>cooking inspirations</Title>\n    </HeaderWrapper>\n  );\n};\n\nexport default Header;\n","import styled from \"styled-components\";\n\nexport const LayoutWrapper = styled.div`\n  margin: 3rem 0;\n`;\n","import React from \"react\";\nimport { LayoutWrapper } from \"./layout.style\";\n\nconst Layout = ({ children }) => {\n  return <LayoutWrapper>{children}</LayoutWrapper>;\n};\n\nexport default Layout;\n","import styled from \"styled-components\";\n\nexport const RecipeWrapper = styled.div`\n    background-image: linear-gradient(150deg, #764b65, #4b1338);\n    border-radius: 1.5rem;\n    margin: 2rem;\n    position: relative;\n`;\n\nexport const Text = styled.p`\n    text-align: center;\n    padding: 2rem;\n    font-size: 2rem;\n    font-weight: 500;\n`;\n\nexport const HoverWrapper = styled.div`\n    position: absolute;\n    width: 45px;\n    height: 45px;\n    border-radius: 50%;\n    right: 2rem;\n    top: 50%;\n    transform: translate(0, -50%);\n    z-index: 2;\n    background: red;\n`;\n\nexport const ButtonWrapper = styled.div`\n    position: absolute;\n    width: 40px;\n    height: 40px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 50%;\n    right: 2rem;\n    top: 50%;\n    transform: translate(0, -50%);\n    &:hover > svg {\n        stroke: ${({ theme: { color } }) => color.lightRed};\n    }\n`;\n\nexport const DeleteButton = styled.svg`\n    stroke: #744963;\n`;\n","import { v4 as uuidv4 } from \"uuid\";\n\nexport const recipesReducer = (state, action) => {\n    switch (action.type) {\n        case \"ADD_RECIPE\":\n            return [\n                ...state,\n                {\n                    title: action.recipe.title,\n                    ingredients: action.recipe.ingredients,\n                    id: uuidv4(),\n                },\n            ];\n        case \"EDIT_RECIPE\":\n            const editedRecipe = action.recipe;\n            const updatedRecipes = state.map((recipe) => {\n                if (recipe.id !== editedRecipe.id) {\n                    return recipe;\n                }\n                return editedRecipe;\n            });\n            return [...updatedRecipes];\n        case \"REMOVE_RECIPE\":\n            return state.filter((recipe) => recipe.id !== action.id);\n        default:\n            return state;\n    }\n};\n","import React, { createContext, useReducer } from \"react\";\nimport { recipesReducer } from \"../reducers/recipesReducer\";\n\nconst RecipesContext = createContext();\n\nconst RecipesContextProvider = ({ children }) => {\n    const [recipes, dispatch] = useReducer(recipesReducer, []);\n\n    return (\n        <RecipesContext.Provider value={{ recipes, dispatch }}>\n            {children}\n        </RecipesContext.Provider>\n    );\n};\n\nexport { RecipesContextProvider, RecipesContext };\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {\n    RecipeWrapper,\n    Text,\n    DeleteButton,\n    ButtonWrapper,\n} from \"./recipe.style\";\nimport { RecipesContext } from \"../../context/recipesContext\";\n\nexport const LinkTo = styled(Link)`\n    color: white;\n    text-decoration: none;\n`;\n\nconst Recipe = ({ recipe: { title, ingredients, id } }) => {\n    const { dispatch } = useContext(RecipesContext);\n    return (\n        <RecipeWrapper>\n            <LinkTo to={`/${id}`}>\n                <Text>{title}</Text>\n            </LinkTo>\n            <ButtonWrapper>\n                <DeleteButton\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"#fff\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    onClick={() => dispatch({ type: \"REMOVE_RECIPE\", id })}\n                >\n                    <polyline points=\"3 6 5 6 21 6\"></polyline>\n                    <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path>\n                </DeleteButton>\n            </ButtonWrapper>\n        </RecipeWrapper>\n    );\n};\n\nexport default Recipe;\n","import styled from \"styled-components\";\n\nexport const Add = styled.div`\n  position: fixed;\n  bottom: 1.5rem;\n  right: 1.5rem; \n  /* ${(props) => (props.active ? \"calc(1rem + 14px)\" : \"1rem\")} */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  background-color: ${({ theme: { color } }) => color.pink};\n  user-select: none;\n  transform: ${(props) => (props.activeAdd ? \"rotate(45deg)\" : \"rotate(0)\")};\n  cursor: pointer;\n  transition: transform 0.3s ease;\n  z-index: 10;\n`;\n","import React from \"react\";\nimport { Add } from \"./button.style\";\n\nexport const Button = ({ className, activeButton, activeAdd, activeClose }) => {\n    return (\n        <Add\n            className={className}\n            activeAdd={activeAdd}\n            activeClose={activeClose}\n            onClick={() => activeButton()}\n        >\n            <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"36\"\n                height=\"36\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n            >\n                <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\n                <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n            </svg>\n        </Add>\n    );\n};\n","import styled from \"styled-components\";\n\nexport const Overlay = styled.div`\n  visibility: ${(props) => (props.visible ? \"visible\" : \"hidden\")};\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: 100%;\n  backdrop-filter: blur(10px) grayscale(10%) brightness(80%);\n`;\n\nexport const FormWrapper = styled.form`\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  flex-direction: column;\n  width: 80%;\n  background: #fff;\n  border-radius: 5px;\n  transform: ${({ visible }) =>\n    visible ? \"translateY(0)\" : \"translateY(10px)\"};\n  transition: transform 0.3s ease-out;\n`;\n\nexport const Title = styled.p`\n  margin: 3rem;\n  text-align: center;\n  font-size: 2.4rem;\n  font-weight: 700;\n  color: ${({ theme: { color } }) => color.darkFont};\n`;\n\nexport const InputTitle = styled.input`\n  width: 80%;\n  margin-bottom: 1rem;\n  padding: 1.5rem;\n  background-color: ${({ theme: { color } }) => color.lightOrange};\n  color: ${({ theme: { color } }) => color.white};\n  font-size: 2rem;\n  font-weight: 700;\n  outline: none;\n  border: none;\n  border-radius: 30px;\n  text-shadow: 0px 0px 2px rgba(0, 0, 0, 0.34);\n  &::placeholder {\n    color: #fff;\n  }\n`;\n\nexport const InputIngredients = styled.textarea`\n  width: 80%;\n  margin: 1rem 0;\n  padding: 1.5rem;\n  min-height: 12rem;\n  background-color: ${({ theme: { color } }) => color.lightOrange};\n  color: ${({ theme: { color } }) => color.white};\n  font-size: 2rem;\n  font-weight: 700;\n  outline: none;\n  border: none;\n  border-radius: 30px;\n  text-shadow: 0px 0px 2px rgba(0, 0, 0, 0.34);\n  &::placeholder {\n    color: #fff;\n    opacity: 0.8;\n  }\n`;\n\nexport const InputButton = styled.button`\n  width: 80%;\n  margin: 3rem 0;\n  padding: 1.5rem;\n  background-color: ${({ theme: { color } }) => color.pink};\n  color: ${({ theme: { color } }) => color.white};\n  font-size: 1.8rem;\n  font-weight: 700;\n  outline: none;\n  border: none;\n  border-radius: 30px;\n`;\n","import React, { createContext, useState } from \"react\";\n\nconst FormContext = createContext();\n\nconst FormContextProvider = ({ children }) => {\n    const [addFormVisible, setAddFormVisible] = useState(false);\n    const [editFormVisible, setEditFormVisible] = useState(false);\n\n    const handleAddFormVisible = () => {\n        setAddFormVisible((prev) => !prev);\n    };\n\n    const handleEditFormVisible = () => {\n        setEditFormVisible((prev) => !prev);\n    };\n\n    return (\n        <FormContext.Provider\n            value={{\n                addFormVisible,\n                handleAddFormVisible,\n                editFormVisible,\n                handleEditFormVisible,\n            }}\n        >\n            {children}\n        </FormContext.Provider>\n    );\n};\n\nexport { FormContextProvider, FormContext };\n","import React, { useState, useContext, useRef, useEffect } from \"react\";\nimport {\n    Overlay,\n    FormWrapper,\n    Title,\n    InputTitle,\n    InputIngredients,\n    InputButton,\n} from \"./form.style\";\nimport { FormContext } from \"../../context/formContext\";\nimport { RecipesContext } from \"../../context/recipesContext\";\n\nconst AddForm = () => {\n    const { addFormVisible, handleAddFormVisible } = useContext(FormContext);\n    const { dispatch } = useContext(RecipesContext);\n    const [title, setTitle] = useState(\"\");\n    const [ingredients, setIngredients] = useState(\"\");\n    const inputRef = useRef(null);\n\n    useEffect(() => {\n        if (addFormVisible) {\n            inputRef.current.focus();\n        }\n    }, [addFormVisible]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if ((title.trim() !== \"\") & (ingredients.trim() !== \"\")) {\n            dispatch({\n                type: \"ADD_RECIPE\",\n                recipe: { title, ingredients },\n            });\n            handleAddFormVisible();\n            setTitle(\"\");\n            setIngredients(\"\");\n        }\n    };\n\n    const handleTitleChange = (e) => {\n        const { value } = e.target;\n        setTitle(value);\n    };\n\n    const handleIngredientsChange = (e) => {\n        const { value } = e.target;\n        setIngredients(value);\n    };\n\n    return (\n        <Overlay onSubmit={handleSubmit} visible={addFormVisible}>\n            <FormWrapper visible={addFormVisible}>\n                <Title>Type your recipe</Title>\n                <InputTitle\n                    ref={inputRef}\n                    type=\"text\"\n                    onChange={handleTitleChange}\n                    value={title}\n                    placeholder=\"Recipe title\"\n                />\n                <InputIngredients\n                    value={ingredients}\n                    onChange={handleIngredientsChange}\n                    name=\"ingredients\"\n                    placeholder=\"Enter ingredients separated by comma\"\n                ></InputIngredients>\n                <InputButton>Add</InputButton>\n            </FormWrapper>\n        </Overlay>\n    );\n};\n\nexport default AddForm;\n","import React, { useContext } from \"react\";\nimport Header from \"../components/header/Header\";\nimport Layout from \"../components/layout/Layout\";\nimport Recipe from \"../components/recipe/Recipe\";\nimport { Button } from \"../components/buttons/Button\";\nimport AddForm from \"../components/forms/AddForm\";\nimport { RecipesContext } from \"../context/recipesContext\";\nimport { FormContext } from \"../context/formContext\";\n\nconst Home = () => {\n    const { recipes } = useContext(RecipesContext);\n    const { addFormVisible, handleAddFormVisible } = useContext(FormContext);\n\n    const recipesList = recipes.map((recipe) => {\n        return <Recipe recipe={recipe} key={recipe.id} />;\n    });\n\n    return (\n        <>\n            <Header />\n            <Layout>{recipesList}</Layout>\n            <Button\n                activeAdd={addFormVisible}\n                activeButton={handleAddFormVisible}\n            />\n            <AddForm />\n        </>\n    );\n};\n\nexport default Home;\n","import React, { useState, useContext, useRef, useEffect } from \"react\";\nimport {\n    Overlay,\n    FormWrapper,\n    Title,\n    InputTitle,\n    InputIngredients,\n    InputButton,\n} from \"./form.style\";\nimport { FormContext } from \"../../context/formContext\";\nimport { RecipesContext } from \"../../context/recipesContext\";\n\nconst AddForm = ({ currentRecipe }) => {\n    const { editFormVisible, handleEditFormVisible } = useContext(FormContext);\n    const { dispatch } = useContext(RecipesContext);\n    const [editTitle, setEditTitle] = useState(\"\");\n    const [editIngredients, setEditIngredients] = useState(\"\");\n    const inputRef = useRef(null);\n\n    useEffect(() => {\n        if (editFormVisible) {\n            setEditTitle(currentRecipe.title);\n            setEditIngredients(currentRecipe.ingredients);\n            inputRef.current.focus();\n        }\n    }, [editFormVisible, currentRecipe]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if ((editTitle.trim() !== \"\") & (editIngredients.trim() !== \"\")) {\n            dispatch({\n                type: \"EDIT_RECIPE\",\n                recipe: {\n                    title: editTitle,\n                    ingredients: editIngredients,\n                    id: currentRecipe.id,\n                },\n            });\n            handleEditFormVisible();\n        }\n    };\n\n    const handleTitleChange = (e) => {\n        const { value } = e.target;\n        setEditTitle(value);\n    };\n\n    const handleIngredientsChange = (e) => {\n        const { value } = e.target;\n        setEditIngredients(value);\n    };\n\n    return (\n        <Overlay onSubmit={handleSubmit} visible={editFormVisible}>\n            <FormWrapper visible={editFormVisible}>\n                <Title>Update your recipe</Title>\n                <InputTitle\n                    ref={inputRef}\n                    type=\"text\"\n                    value={editTitle}\n                    onChange={handleTitleChange}\n                    name=\"title\"\n                />\n                <InputIngredients\n                    value={editIngredients}\n                    onChange={handleIngredientsChange}\n                    name=\"ingredients\"\n                ></InputIngredients>\n                <InputButton>Update</InputButton>\n            </FormWrapper>\n        </Overlay>\n    );\n};\n\nexport default AddForm;\n","import styled from \"styled-components\";\n\nexport const BackArrow = styled.div`\n  margin: 2rem 0 0 2rem;\n`;\n","import styled from \"styled-components\";\n\nexport const RecipeWrapper = styled.div`\n    width: 80%;\n    margin: 2rem auto;\n    background-image: linear-gradient(150deg, #764b65, #4b1338);\n    padding: 3rem;\n    border-radius: 1.5rem;\n`;\n\nexport const RecipeTitle = styled.p`\n    text-align: center;\n    margin-bottom: 2rem;\n    font-size: 2.2rem;\n    font-weight: 700;\n    text-transform: uppercase;\n    letter-spacing: 0.3rem;\n`;\n\nexport const List = styled.ol`\n    list-style: none;\n    counter-reset: li;\n    padding: 0;\n`;\nexport const Ingredient = styled.li`\n    position: relative;\n    counter-increment: li;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    min-height: 5rem;\n    padding: 2rem 1rem 2rem 6rem;\n    background: #633957;\n    border-radius: 30px;\n    margin: 1rem 0;\n    &::before {\n        position: absolute;\n        content: counter(li);\n        font-size: 2rem;\n        font-weight: 700;\n        color: #76526a;\n        background-color: #f4f4f4;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        text-align: center;\n        width: 4rem;\n        height: 4rem;\n        left: 1rem;\n        top: 1rem;\n        border-radius: 50%;\n    }\n`;\n","import styled from \"styled-components\";\n\nexport const EditButton = styled.button`\n    background: yellow;\n    border-radius: 30px;\n    width: 100%;\n    height: 6rem;\n    margin-top: 3rem;\n    background-color: ${({ theme: { color } }) => color.pink};\n    color: ${({ theme: { color } }) => color.white};\n    font-size: 2rem;\n    font-weight: 700;\n    outline: none;\n    border: none;\n    border-radius: 30px;\n    letter-spacing: 0.1rem;\n`;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { RecipesContext } from \"../context/recipesContext\";\nimport { FormContext } from \"../context/formContext\";\nimport { useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport EditForm from \"../components/forms/EditForm\";\nimport { Button } from \"../components/buttons/Button\";\nimport { BackArrow } from \"../components/buttons/back-arrow.style\";\nimport {\n    RecipeWrapper,\n    RecipeTitle,\n    List,\n    Ingredient,\n} from \"../components/recipe/recipe-wrapper.style\";\nimport { EditButton } from \"../components/buttons/edit-button.style\";\nimport styled from \"styled-components\";\n\nconst CloseButton = styled(Button)`\n    transform: rotate(45deg);\n    visibility: ${(props) => (props.activeClose ? \"visible\" : \"hidden\")};\n`;\n\nconst RecipeDetails = () => {\n    const { recipes } = useContext(RecipesContext);\n    const { editFormVisible, handleEditFormVisible } = useContext(FormContext);\n    const [currentRecipe, setCurrentRecipe] = useState({});\n    const [ingredients, setIngredients] = useState([]);\n    const param = useParams();\n    const currentID = param.id;\n\n    useEffect(() => {\n        const filteredRecipe = recipes.filter(\n            (recipe) => recipe.id === currentID\n        );\n        setCurrentRecipe(...filteredRecipe);\n    }, [currentID, recipes]);\n\n    useEffect(() => {\n        if (Object.keys(currentRecipe).length !== 0) {\n            const ingredientsArr = currentRecipe.ingredients.split(\",\");\n            setIngredients(ingredientsArr);\n        }\n    }, [currentRecipe]);\n\n    const spread = ingredients\n        .filter((ingredient) => ingredient.trim() !== \"\")\n        .map((ingredient, idx) => (\n            <Ingredient key={idx}>{ingredient.trim()}</Ingredient>\n        ));\n\n    return (\n        <>\n            <BackArrow>\n                <Link to={\"/\"}>\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"36\"\n                        height=\"36\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"#fff\"\n                        strokeWidth=\"3\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                    >\n                        {/* <line x1=\"19\" y1=\"12\" x2=\"5\" y2=\"12\"></line> */}\n                        <polyline points=\"12 19 5 12 12 5\"></polyline>\n                    </svg>\n                </Link>\n            </BackArrow>\n            <RecipeWrapper>\n                <RecipeTitle>{currentRecipe.title}</RecipeTitle>\n                <List>{spread}</List>\n                <EditButton onClick={() => handleEditFormVisible()}>\n                    Edit\n                </EditButton>\n            </RecipeWrapper>\n            <EditForm currentRecipe={currentRecipe} />\n            <CloseButton\n                activeClose={editFormVisible}\n                activeButton={handleEditFormVisible}\n            />\n        </>\n    );\n};\n\nexport default RecipeDetails;\n","import React, { useContext } from \"react\";\nimport { GlobalStyle } from \"./components/global/global.style\";\nimport { theme } from \"./components/global/theme.style\";\nimport Home from \"./routes/Home\";\nimport RecipeDetails from \"./routes/RecipeDetails\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport { RecipesContextProvider } from \"./context/recipesContext\";\nimport { FormContext } from \"./context/formContext\";\n\nconst App = () => {\n  const { addFormVisible } = useContext(FormContext);\n  return (\n    <Router>\n      <RecipesContextProvider>\n        <ThemeProvider theme={theme}>\n          <GlobalStyle noScroll={addFormVisible} />\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/:id\" component={RecipeDetails} />\n          </Switch>\n        </ThemeProvider>\n      </RecipesContextProvider>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { FormContextProvider } from \"./context/formContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <FormContextProvider>\n      <App />\n    </FormContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}